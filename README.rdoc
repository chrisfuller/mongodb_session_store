= MongoDBSessionStore

Stores Rails sessions in a MongoDB[http://mongodb.org/] collection. Clean code, thoughtful customization, optional garbage-collection. Use with or without a MongoDB object mapper (ODM).

== Prerequisites

Rails must already be configured for MongoDB. Using an object mapper (ODM), such as MongoMapper[http://mongomapper.com/] or Mongoid[http://mongoid.org/], is entirely optional.

== Installation

  $ gem install mongodb_session_store

== Rails Configuration

<em>Step 1) Update Gemfile</em>

Add to Gemfile:

  gem "mongodb_session_store"

<em>Step 2) Specify database</em>

Provide one <tt>Mongo::DB</tt> instance in <tt>config/initializers/session_store.rb</tt> as in these examples:

<b>MongoMapper example:</b>
  AppName::Application.config.session_store :mongodb_session_store, :database => lambda { MongoMapper.database }

<b>Mongoid example:</b>
  AppName::Application.config.session_store :mongodb_session_store, :database => lambda { Mongoid.database }

<b>Ruby driver example:</b>
  AppName::Application.config.session_store :mongodb_session_store, :database => lambda { Mongo::Connection.new.db('db_name') }

== Configuration Options

Optionally use these additional parameters to customize the collection name and/or key names (default values shown) or to configure garbage-collection:

<b>Collection Name:</b>
  :collection => "sessions"

<b>Session ID Key:</b>
  :session_id_key => "session_id"

<b>Session Data Key:</b>
  :session_data_key => "session_data"

<b>Session Expiration (in seconds):</b>
  :session_expiration => 0 # default value of zero disables garbage-collection

== Rake Tasks

To drop the MongoDB collection used for storing the Rails sessions for the current Rails.env (USE WITH CAUTION):

  $ rake db:mongo:sessions:clear

== License

See MIT-LICENSE for details.

== Copyright

Copyright (c) 2012 Christopher Fuller.
